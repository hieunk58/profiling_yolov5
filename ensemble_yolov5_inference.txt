#ensemble yolov5 vs individual model

# MODEL NANO AND SMALL

python val.py --weights yolov5n.pt yolov5s.pt --data coco128.yaml --img 640 --half
val: data=/home/nvidia/Documents/yolov5/data/coco128.yaml, weights=['yolov5n.pt', 'yolov5s.pt'], batch_size=32, imgsz=640, conf_thres=0.001, iou_thres=0.6, max_det=300, task=val, device=, workers=8, single_cls=False, augment=False, verbose=False, save_txt=False, save_hybrid=False, save_conf=False, save_json=False, project=runs/val, name=exp, exist_ok=False, half=True, dnn=False
YOLOv5 🚀 v7.0-63-gcdd804d Python-3.8.10 torch-1.12.0a0+2c916ef.nv22.3 CUDA:0 (Xavier, 6846MiB)

Fusing layers... 
YOLOv5n summary: 213 layers, 1867405 parameters, 0 gradients
Fusing layers... 
YOLOv5s summary: 213 layers, 7225885 parameters, 0 gradients
Ensemble created with ['yolov5n.pt', 'yolov5s.pt']

val: Scanning /home/nvidia/Documents/datasets/coco128/labels/train2017.cache... 126 images, 2 backgrounds, 0 corrupt: 100%|███████
                 Class     Images  Instances          P          R      mAP50   mAP50-95: 100%|██████████| 4/4 [00:32<00:00,  8.03
                   all        128        929      0.694      0.603      0.686      0.464
Speed: 1.1ms pre-process, 145.4ms inference, 28.7ms NMS per image at shape (32, 3, 640, 640)
Results saved to runs/val/exp10

#MODEL NANO

python val.py --weights yolov5n.pt --data coco128.yaml --img 640 --half
val: data=/home/nvidia/Documents/yolov5/data/coco128.yaml, weights=['yolov5n.pt'], batch_size=32, imgsz=640, conf_thres=0.001, iou_thres=0.6, max_det=300, task=val, device=, workers=8, single_cls=False, augment=False, verbose=False, save_txt=False, save_hybrid=False, save_conf=False, save_json=False, project=runs/val, name=exp, exist_ok=False, half=True, dnn=False
YOLOv5 🚀 v7.0-63-gcdd804d Python-3.8.10 torch-1.12.0a0+2c916ef.nv22.3 CUDA:0 (Xavier, 6846MiB)

Fusing layers... 
YOLOv5n summary: 213 layers, 1867405 parameters, 0 gradients
val: Scanning /home/nvidia/Documents/datasets/coco128/labels/train2017.cache... 126 images, 2 backgrounds, 0 corrupt: 100%|██████████| 128/12
                 Class     Images  Instances          P          R      mAP50   mAP50-95: 100%|██████████| 4/4 [00:21<00:00,  5.27s/it]
                   all        128        929      0.623      0.472      0.546      0.349
Speed: 0.9ms pre-process, 36.5ms inference, 26.0ms NMS per image at shape (32, 3, 640, 640)
Results saved to runs/val/exp11


# MODEL SMALL

python val.py --weights yolov5s.pt --data coco128.yaml --img 640 --half
val: data=/home/nvidia/Documents/yolov5/data/coco128.yaml, weights=['yolov5s.pt'], batch_size=32, imgsz=640, conf_thres=0.001, iou_thres=0.6, max_det=300, task=val, device=, workers=8, single_cls=False, augment=False, verbose=False, save_txt=False, save_hybrid=False, save_conf=False, save_json=False, project=runs/val, name=exp, exist_ok=False, half=True, dnn=False
YOLOv5 🚀 v7.0-63-gcdd804d Python-3.8.10 torch-1.12.0a0+2c916ef.nv22.3 CUDA:0 (Xavier, 6846MiB)

Fusing layers... 
YOLOv5s summary: 213 layers, 7225885 parameters, 0 gradients
val: Scanning /home/nvidia/Documents/datasets/coco128/labels/train2017.cache... 126 images, 2 backgrounds, 0 corrupt: 100%|██████████| 128/12
                 Class     Images  Instances          P          R      mAP50   mAP50-95:  25%|██▌       | 1/4 [00:04<00:13,  4.34s/it]WARNING ⚠️ NMS time limit 2.100s exceeded
                 Class     Images  Instances          P          R      mAP50   mAP50-95:  50%|█████     | 2/4 [00:10<00:10,  5.14s/it]WARNING ⚠️ NMS time limit 2.100s exceeded
                 Class     Images  Instances          P          R      mAP50   mAP50-95: 100%|██████████| 4/4 [00:23<00:00,  5.91s/it]
                   all        128        929      0.711      0.454      0.514       0.35
Speed: 1.6ms pre-process, 54.2ms inference, 39.6ms NMS per image at shape (32, 3, 640, 640)
Results saved to runs/val/exp12

